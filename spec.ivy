#lang ivy1.7

include common

isolate spec = {
    relation requests(R:request_query)
    relation replies(R:reply_query)
    function map(K:key) : value
    
    after init {
	# Abstract "default" value
	map(K: key) := 0;
	requests(R: request_query) := false;
	replies(R: reply_query) := false
    }

    specification {
	before commit(req: request_query, repl: reply_query) {
	    require req.qtype = repl.qtype;
	    require req.qkey = repl.qkey;
	}
    }
    

    action commit(req: request_query, repl: reply_query) = {
	var checkDat : value;
	if req.qtype = write {
	    checkDat := req.qvalue;
	} else {
	    checkDat := map(req.qkey);
	}
	if ~requests(req) & repl.qvalue = checkDat {
	    if req.qtype = write {
		# Update map
		map(req.qkey) := req.qvalue;
	    }
	    requests(req) := true;
	    replies(repl) := true	
	}
    }    
    
} with ver_num
