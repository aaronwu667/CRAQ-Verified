#lang ivy1.7

include common

isolate spec = {
    relation requests(R:request_query)
    relation replies(R:reply_query)
    function map(K:key) : value

    action commit(req: request_query, repl: reply_query)
    
    after init {
	# Abstract "default" value
	map(K: key) := 0;
	requests(R: request_query) := false;
	replies(R: reply_query) := false
    }

    specification {
	before commit(req: request_query, repl: reply_query) {
	    require req.qtype = repl.qtype;
	    require req.qkey = repl.qkey;
	    require req.qid = repl.qid;
	}
    }
    
    implementation {
	# Service's response to client
	implement commit(req: request_query, repl: reply_query) {
	    var checkDat : value;
	    if req.qtype = put {
		checkDat := req.qvalue;
	    } else {
		checkDat := map(req.qkey);
		}
	    if ~requests(repl) & repl.qvalue = checkDat {
		if req.qtype = put {
		    # Update map
		    map(req.qkey) := req.qvalue;
		}
		requests(repl) := true;
		replies(repl) := true	
	    }
	}
    }
} with ver_num
